{
  "openapi": "3.0.4",
  "info": {
    "title": "Personas CRUD API",
    "description": "API RESTful para gestión de personas con arquitectura limpia",
    "contact": {
      "name": "Equipo de Desarrollo",
      "email": "dev@empresa.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/Personas": {
      "post": {
        "tags": [
          "Gestión de Personas"
        ],
        "summary": "Crea una nueva persona en el sistema.",
        "requestBody": {
          "description": "Datos de la nueva persona a crear.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatosNuevaPersonaRestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DatosNuevaPersonaRestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DatosNuevaPersonaRestDTO"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "201": {
            "description": "Persona creada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaRestDTO"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto con datos existentes (ej: email duplicado).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Gestión de Personas"
        ],
        "summary": "Obtiene todas las personas registradas en el sistema.",
        "responses": {
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Lista de personas obtenida exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonaRestDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Personas/{id}": {
      "get": {
        "tags": [
          "Gestión de Personas"
        ],
        "summary": "Obtiene una persona por su identificador único.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la persona a buscar.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Persona encontrada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaRestDTO"
                }
              }
            }
          },
          "404": {
            "description": "Persona no encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gestión de Personas"
        ],
        "summary": "Modifica los datos de una persona existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la persona a modificar.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Nuevos datos de la persona.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatosModificarPersonaRestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DatosModificarPersonaRestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DatosModificarPersonaRestDTO"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Persona modificada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaRestDTO"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Persona no encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto con datos existentes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gestión de Personas"
        ],
        "summary": "Elimina una persona del sistema.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la persona a eliminar.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Persona eliminada exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaRestDTO"
                }
              }
            }
          },
          "404": {
            "description": "Persona no encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DatosModificarPersonaRestDTO": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nuevo nombre de la persona. Debe tener entre 2 y 100 caracteres.",
            "nullable": true
          },
          "dni": {
            "type": "string",
            "description": "Nuevo Documento Nacional de Identidad de la persona.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Nueva dirección de correo electrónico válida.",
            "nullable": true
          },
          "edad": {
            "type": "integer",
            "description": "Nueva edad en años. Debe estar entre 18 y 120.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO para modificar una persona existente desde la capa REST.\nIncluye validaciones con DataAnnotations para entrada HTTP."
      },
      "DatosNuevaPersonaRestDTO": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre completo de la persona. Debe tener entre 2 y 100 caracteres.",
            "nullable": true
          },
          "dni": {
            "type": "string",
            "description": "Documento Nacional de Identidad de la persona.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Dirección de correo electrónico válida.",
            "nullable": true
          },
          "edad": {
            "type": "integer",
            "description": "Edad en años. Debe estar entre 18 y 120.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO para crear una nueva persona desde la capa REST.\nIncluye validaciones con DataAnnotations para entrada HTTP."
      },
      "ErrorResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Tipo o código del error.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Mensaje descriptivo del error para el usuario.",
            "nullable": true
          },
          "details": {
            "type": "string",
            "description": "Detalles técnicos adicionales del error (opcional).",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "Identificador de trazabilidad para correlacionar logs (opcional).",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp inicializado con la fecha y hora actual en UTC si no se proporciona.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO estándar para respuestas de error en la API REST.\nProporciona información estructurada sobre errores HTTP."
      },
      "PersonaRestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único de la persona (UUID).",
            "nullable": true
          },
          "nombre": {
            "type": "string",
            "description": "Nombre completo de la persona.",
            "nullable": true
          },
          "dni": {
            "type": "string",
            "description": "Documento Nacional de Identidad de la persona.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Dirección de correo electrónico.",
            "nullable": true
          },
          "edad": {
            "type": "integer",
            "description": "Edad en años.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO para representar una persona en la capa REST.\nOptimizado para respuestas HTTP con serialización JSON."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}